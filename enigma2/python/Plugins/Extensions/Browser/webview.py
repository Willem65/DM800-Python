# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _webview.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_webview', [dirname(__file__)])
        except ImportError:
            import _webview
            return _webview
        if fp is not None:
            try:
                _mod = imp.load_module('_webview', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _webview = swig_import_helper()
    del swig_import_helper
else:
    import _webview
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import enigma
class eWebView(enigma.eWidget):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    navOpenLink = _webview.eWebView_navOpenLink
    navLeft = _webview.eWebView_navLeft
    navRight = _webview.eWebView_navRight
    navUp = _webview.eWebView_navUp
    navDown = _webview.eWebView_navDown
    navPageUp = _webview.eWebView_navPageUp
    navPageDown = _webview.eWebView_navPageDown
    navTab = _webview.eWebView_navTab
    navBackspace = _webview.eWebView_navBackspace
    navBacktab = _webview.eWebView_navBacktab
    navDelete = _webview.eWebView_navDelete
    navRed = _webview.eWebView_navRed
    navGreen = _webview.eWebView_navGreen
    navYellow = _webview.eWebView_navYellow
    navBlue = _webview.eWebView_navBlue
    navMediaPlay = _webview.eWebView_navMediaPlay
    navMediaPause = _webview.eWebView_navMediaPause
    navMediaStop = _webview.eWebView_navMediaStop
    navMediaPlayPause = _webview.eWebView_navMediaPlayPause
    navMediaRewind = _webview.eWebView_navMediaRewind
    navMediaFastForward = _webview.eWebView_navMediaFastForward
    nav0 = _webview.eWebView_nav0
    nav1 = _webview.eWebView_nav1
    nav2 = _webview.eWebView_nav2
    nav3 = _webview.eWebView_nav3
    nav4 = _webview.eWebView_nav4
    nav5 = _webview.eWebView_nav5
    nav6 = _webview.eWebView_nav6
    nav7 = _webview.eWebView_nav7
    nav8 = _webview.eWebView_nav8
    nav9 = _webview.eWebView_nav9
    navBack = _webview.eWebView_navBack
    navBackExplicit = _webview.eWebView_navBackExplicit
    navForward = _webview.eWebView_navForward
    navForwardExplicit = _webview.eWebView_navForwardExplicit
    navStop = _webview.eWebView_navStop
    navReload = _webview.eWebView_navReload
    def __init__(self, *args): 
        _webview.eWebView_swiginit(self,_webview.new_eWebView(*args))
    __swig_destroy__ = _webview.delete_eWebView
    contentsSizeChanged = _swig_property(_webview.eWebView_contentsSizeChanged_get, _webview.eWebView_contentsSizeChanged_set)
    iconChanged = _swig_property(_webview.eWebView_iconChanged_get, _webview.eWebView_iconChanged_set)
    initialLayoutCompleted = _swig_property(_webview.eWebView_initialLayoutCompleted_get, _webview.eWebView_initialLayoutCompleted_set)
    javaScriptWindowObjectCleared = _swig_property(_webview.eWebView_javaScriptWindowObjectCleared_get, _webview.eWebView_javaScriptWindowObjectCleared_set)
    pageChanged = _swig_property(_webview.eWebView_pageChanged_get, _webview.eWebView_pageChanged_set)
    titleChanged = _swig_property(_webview.eWebView_titleChanged_get, _webview.eWebView_titleChanged_set)
    urlChanged = _swig_property(_webview.eWebView_urlChanged_get, _webview.eWebView_urlChanged_set)
    contentsChanged = _swig_property(_webview.eWebView_contentsChanged_get, _webview.eWebView_contentsChanged_set)
    downloadRequested = _swig_property(_webview.eWebView_downloadRequested_get, _webview.eWebView_downloadRequested_set)
    geometryChangeRequested = _swig_property(_webview.eWebView_geometryChangeRequested_get, _webview.eWebView_geometryChangeRequested_set)
    linkClicked = _swig_property(_webview.eWebView_linkClicked_get, _webview.eWebView_linkClicked_set)
    linkHovered = _swig_property(_webview.eWebView_linkHovered_get, _webview.eWebView_linkHovered_set)
    loadFinished = _swig_property(_webview.eWebView_loadFinished_get, _webview.eWebView_loadFinished_set)
    loadProgress = _swig_property(_webview.eWebView_loadProgress_get, _webview.eWebView_loadProgress_set)
    loadStarted = _swig_property(_webview.eWebView_loadStarted_get, _webview.eWebView_loadStarted_set)
    menuBarVisibilityChangeRequested = _swig_property(_webview.eWebView_menuBarVisibilityChangeRequested_get, _webview.eWebView_menuBarVisibilityChangeRequested_set)
    microFocusChanged = _swig_property(_webview.eWebView_microFocusChanged_get, _webview.eWebView_microFocusChanged_set)
    selectionChanged = _swig_property(_webview.eWebView_selectionChanged_get, _webview.eWebView_selectionChanged_set)
    statusBarMessage = _swig_property(_webview.eWebView_statusBarMessage_get, _webview.eWebView_statusBarMessage_set)
    statusBarVisibilityChangeRequested = _swig_property(_webview.eWebView_statusBarVisibilityChangeRequested_get, _webview.eWebView_statusBarVisibilityChangeRequested_set)
    toolBarVisibilityChangeRequested = _swig_property(_webview.eWebView_toolBarVisibilityChangeRequested_get, _webview.eWebView_toolBarVisibilityChangeRequested_set)
    unsupportedContent = _swig_property(_webview.eWebView_unsupportedContent_get, _webview.eWebView_unsupportedContent_set)
    windowCloseRequested = _swig_property(_webview.eWebView_windowCloseRequested_get, _webview.eWebView_windowCloseRequested_set)
    javaScriptAlert = _swig_property(_webview.eWebView_javaScriptAlert_get, _webview.eWebView_javaScriptAlert_set)
    windowRequested = _swig_property(_webview.eWebView_windowRequested_get, _webview.eWebView_windowRequested_set)
    authenticationRequired = _swig_property(_webview.eWebView_authenticationRequired_get, _webview.eWebView_authenticationRequired_set)
    proxyAuthenticationRequired = _swig_property(_webview.eWebView_proxyAuthenticationRequired_get, _webview.eWebView_proxyAuthenticationRequired_set)
    sslErrors = _swig_property(_webview.eWebView_sslErrors_get, _webview.eWebView_sslErrors_set)
eWebView.navigate = new_instancemethod(_webview.eWebView_navigate,None,eWebView)
eWebView.asciiInput = new_instancemethod(_webview.eWebView_asciiInput,None,eWebView)
eWebView.load = new_instancemethod(_webview.eWebView_load,None,eWebView)
eWebView.scroll = new_instancemethod(_webview.eWebView_scroll,None,eWebView)
eWebView.getHtml = new_instancemethod(_webview.eWebView_getHtml,None,eWebView)
eWebView.setHtml = new_instancemethod(_webview.eWebView_setHtml,None,eWebView)
eWebView.setZoomFactor = new_instancemethod(_webview.eWebView_setZoomFactor,None,eWebView)
eWebView.getZoomFactor = new_instancemethod(_webview.eWebView_getZoomFactor,None,eWebView)
eWebView.setDict = new_instancemethod(_webview.eWebView_setDict,None,eWebView)
eWebView.enablePersistentStorage = new_instancemethod(_webview.eWebView_enablePersistentStorage,None,eWebView)
eWebView.getRawCookies = new_instancemethod(_webview.eWebView_getRawCookies,None,eWebView)
eWebView.setRawCookies = new_instancemethod(_webview.eWebView_setRawCookies,None,eWebView)
eWebView.setBackgroundTransparent = new_instancemethod(_webview.eWebView_setBackgroundTransparent,None,eWebView)
eWebView.setAcceptLanguage = new_instancemethod(_webview.eWebView_setAcceptLanguage,None,eWebView)
eWebView.leftClick = new_instancemethod(_webview.eWebView_leftClick,None,eWebView)
eWebView.getUserAgent = new_instancemethod(_webview.eWebView_getUserAgent,None,eWebView)
eWebView.setUserAgent = new_instancemethod(_webview.eWebView_setUserAgent,None,eWebView)
eWebView.resetUserAgent = new_instancemethod(_webview.eWebView_resetUserAgent,None,eWebView)
eWebView_swigregister = _webview.eWebView_swigregister
eWebView_swigregister(eWebView)



